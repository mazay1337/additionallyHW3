public class Main {
    public static void main(String[] args) {

        /** Task num6 of increased difficulty
         * Объявить целочисленные переменные a = 12, b = 27, c = 44, d = 15, e = 9.
         * Вычислить выражение a * (b + (c - d * e)) и присвоить его результат переменной result.
         * Инвертировать результат (значение в переменной result),
         * преобразовав его в вариант с противоположным значением
         * (отрицательное -> положительное, положительное -> отрицательное).
         * Вывести (напечатать) результат в консоль.
         */
        byte a = 12, b = 27, c = 44, d = 15, e = 9;
        int result = a * (b + (c - d * e));
        result = Math.abs(result);
        System.out.println(result); // вывод: 768



        /** Task num7 of increased difficulty
         * Объявить целочисленные переменные a = 5 и b = 7.
         * Добиться математическими манипуляциями того, чтобы a = 7 и b = 5.
         * Использовать дополнительные переменные запрещено.
         */
        // что бы переменные не повторялись заменила их на x и y
        int x = 5;
        int y = 7;
        x = x * y;
        y = x / y;
        x = x / y;
        System.out.println(x); // вывод 7
        System.out.println(y); // вывод 5


        /** Task num8 of increased difficulty
         *  Объявить переменную a и инициализировать ее любым трехзначным числом.
         *  Объявить переменную b и, путем математических операций над a получить
         *  и присвоить переменной b цифру, которая стоит в центре значения из переменной a.
         *  Например, если a = 256, то необходимо с помощью математических действий достать цифру 5
         *  из центра и присвоить переменной b. Если a = 789, то b должна быть инициализирована числом 8,
         *  так как эта цифра является вторым из трех (центральным) символом в значении a.
         *  Следует учесть, что алгоритм должен быть универсальным и корректно срабатывать
         *  на любых трехзначных числах из a без изменений.
         *  Это значит, что рассчитать в голове сумму, которую необходимо вычесть или прибавить
         *  к a для корректного значения в b нельзя, так как при каждом изменении значения в a
         *  её будет необходимо пересчитывать.
         */

        // Вместо а и б, возьму переменные numA numB
        int numA = 963;
        int numB;
        numA = numA % 100;
        numB = numA /10;
        System.out.println(numB); // вывод 6

    }

}